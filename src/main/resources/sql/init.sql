CREATE DATABASE IF NOT EXISTS `ParkingManagement`;
USE `ParkingManagement`;

DROP TABLE IF EXISTS `ParkingSpot`;
DROP TABLE IF EXISTS `Parker`;
CREATE TABLE IF NOT EXISTS `Parker` (
    `id` Int PRIMARY KEY AUTO_INCREMENT,
    `entryDate` DATETIME,
    `Ã¨xitDate` DATETIME,
    `seasonParker` TINYINT(1) NOT NULL,
    `parkingFee` DECIMAL
);


CREATE TABLE IF NOT EXISTS `ParkingSpot` (
    `id` Int AUTO_INCREMENT,
    `reserved` TINYINT(1) NOT NULL,
    `parkerID` INT,
    PRIMARY KEY (`id`),
    FOREIGN KEY (`parkerID`) REFERENCES Parker(`id`)
);









INSERT INTO ParkingSpot (reserved, parkerID)
VALUES
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (1, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL),
    (0, NULL);

